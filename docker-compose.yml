version: '3'

services:
    db:
        image: postgres
        ports:
            - "5435:5432"
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=analytics_db
        volumes:
            - ./dbs/postgres-data:/var/lib/postgresql
    web:
        container_name: analytics_web
        build: ./application
        command: bash -c "pip uninstall -y python3-openid &&
            pip uninstall -y social-auth-app-django &&
            pip install django-rest-framework-social-oauth2 &&
            python manage.py makemigrations onlinecourse --noinput  &&
            python manage.py migrate onlinecourse --noinput &&
            python manage.py runserver --insecure 0.0.0.0:8000";
#            python manage.py makemigrations --noinput  && python manage.py makemigrations dataprocessing && python manage.py makemigrations workprogramsapp &&
#            python manage.py migrate dataprocessing && python manage.py migrate workprogramsapp &
            # "python manage.py makemigrations --merge --noinput" --fake-initial; -

        volumes:
             - ./application:/application
        ports:
            - "8003:8000"
        restart: always
        depends_on:
            - db
    frontend:
        stdin_open: true
        tty: true
        container_name: analytics_frontend
        build:
            context: ./frontend
            dockerfile: Dockerfile
        volumes:
            - ./frontend:/app
            - node-modules:/app/node_modules
        ports:
            - "3002:3000"
        environment:
            - REACT_APP_API_HOST=62.109.28.95
            - REACT_APP_API_SCHEMA=http
            - REACT_APP_API_PORT=8003
            - PORT=3000

volumes:
    node-modules: